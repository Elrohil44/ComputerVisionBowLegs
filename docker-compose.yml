version: '3'
services:
  db:
    image: mongo:4.2
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=bowlegs
    command: --replSet rs0
    volumes:
      - ./db/data:/data/db
      - ./db/initdb/:/docker-entrypoint-initdb.d/
    networks:
      - backend
    restart: unless-stopped
  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - backend
    restart: unless-stopped
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "jobs:3:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - backend
      - frontend
    restart: unless-stopped
  api:
    build: ./api
    environment:
      - MONGODB_URL='mongodb://root:root@db:27017/bowlegs?replicaSet=rs0'
      - KAFKA_BROKER="kafka:9092"
    volumes:
      - ./static:/var/content/static
    networks:
      - backend
    depends_on:
      - kafka
      - db
    restart: unless-stopped
  consumer:
    build: ./consumer
    environment:
      - KAFKA_BROKER="kafka:9092"
      - API_URL="nginx:80/api"
    depends_on:
      - kafka
      - db
    networks:
      - backend
    restart: unless-stopped
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/custom_conf:/etc/nginx/custom_conf:ro
      - ./app/dist:/usr/share/nginx/html:ro
      - ./static:/var/content/static:ro
      - ./nginx/logs/:/etx/nginx/logs/
    networks:
      - backend
      - frontend
    depends_on:
      - api
    restart: unless-stopped
networks:
  backend:
  frontend:
