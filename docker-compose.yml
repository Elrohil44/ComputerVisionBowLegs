version: '3'
services:
  db:
    image: mongo:4.2
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: bowlegs
    command: --replSet rs0
    volumes:
      - ./db/data:/data/db
      - ./db/initdb/:/docker-entrypoint-initdb.d/
    networks:
      - backend
    restart: unless-stopped
  rs-initiator:
    build: ./db/helper
    networks:
      - backend
    depends_on:
      - db
    command: "./wait-for.sh db:27017 -t 10 -- mongo --eval \"printjson(rs.initiate({ _id: 'rs0', protocolVersion: 1, members: [{ _id: 0, host: 'db:27017' }]}))\" mongodb://root:root@db:27017/admin"
  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - backend
    restart: unless-stopped
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: bow-legs-jobs:3:1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - backend
      - frontend
    restart: unless-stopped
  api:
    build: ./api
    environment:
      MONGODB_URL: mongodb://bowlegs:MTAgQ1ZqLf9dQfpwU75tK3o4o8ItYi@db:27017/bowlegs?replicaSet=rs0
      KAFKA_BROKER: kafka:9092
      WORKER_API_TOKEN: Htrf5MTPBtpR9jRqHvfMhzqHV01j9v
    volumes:
      - ./static:/var/content/static
    networks:
      - backend
    depends_on:
      - kafka
      - db
    restart: unless-stopped
  consumer:
    build: ./consumer
    environment:
      KAFKA_BROKER: kafka:9092
      API_URL: nginx:80/api
      API_TOKEN: Htrf5MTPBtpR9jRqHvfMhzqHV01j9v
    depends_on:
      - kafka
      - nginx
    networks:
      - backend
    restart: unless-stopped
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/custom_conf:/etc/nginx/custom_conf:ro
      - ./app/dist:/usr/share/nginx/html:ro
      - ./static:/var/content/static:ro
    networks:
      backend:
      frontend:
        ipv4_address: 10.1.1.44
    depends_on:
      - api
    restart: unless-stopped
networks:
  backend:
    internal: true
    ipam:
      config:
        - subnet: 10.1.2.0/24
  frontend:
    ipam:
      config:
        - subnet: 10.1.1.0/24
